const express = require('express');
const Web3 = require('web3');
const contractABI = require('./contractABI.json');
const bytecode1="60806040523480156200001157600080fd5b50620000276000801b336200005f60201b60201c565b620000597fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775336200005f60201b60201c565b620001d8565b6200007182826200007560201b60201c565b5050565b6200008782826200016660201b60201c565b6200016257600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555062000107620001d060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b611c7980620001e86000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806336568abe11610097578063a217fddf11610066578063a217fddf14610298578063a3ec138d146102b6578063a94015c8146102e6578063d547741f14610304576100f5565b806336568abe14610212578063462e91ec1461022e57806375b238fc1461024a57806391d1485414610268576100f5565b80632f2ff15d116100d35780632f2ff15d1461017657806330a56347146101925780633477ee2e146101b057806335b8e820146101e1576100f5565b80630121b93f146100fa57806301ffc9a714610116578063248a9ca314610146575b600080fd5b610114600480360381019061010f9190611014565b610320565b005b610130600480360381019061012b9190611099565b610536565b60405161013d91906110e1565b60405180910390f35b610160600480360381019061015b9190611132565b6105b0565b60405161016d919061116e565b60405180910390f35b610190600480360381019061018b91906111e7565b6105cf565b005b61019a6105f0565b6040516101a79190611236565b60405180910390f35b6101ca60048036038101906101c59190611014565b610628565b6040516101d89291906112e1565b60405180910390f35b6101fb60048036038101906101f69190611014565b6106e4565b6040516102099291906112e1565b60405180910390f35b61022c600480360381019061022791906111e7565b61083a565b005b61024860048036038101906102439190611446565b6108bd565b005b610252610985565b60405161025f919061116e565b60405180910390f35b610282600480360381019061027d91906111e7565b6109a9565b60405161028f91906110e1565b60405180910390f35b6102a0610a13565b6040516102ad919061116e565b60405180910390f35b6102d060048036038101906102cb919061148f565b610a1a565b6040516102dd91906110e1565b60405180910390f35b6102ee610a3a565b6040516102fb919061116e565b60405180910390f35b61031e600480360381019061031991906111e7565b610a5e565b005b7f72c3eec1760bf69946625c2d4fb8e44e2c806345041960b434674fb9ab3976cf61034a81610a7f565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce90611508565b60405180910390fd5b600180549050821061041e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041590611574565b60405180910390fd5b610456600180848154811061043657610435611594565b5b906000526020600020906002020160010154610a9390919063ffffffff16565b6001838154811061046a57610469611594565b5b9060005260206000209060020201600101819055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fdd4c99251f425e725972ff09e5348689020fce09b3b010f8573d992fe79afcf16001838154811061050c5761050b611594565b5b906000526020600020906002020160000160405161052a91906116bc565b60405180910390a15050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105a957506105a882610aa9565b5b9050919050565b6000806000838152602001908152602001600020600101549050919050565b6105d8826105b0565b6105e181610a7f565b6105eb8383610b13565b505050565b60007fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561061c81610a7f565b60018054905091505090565b6001818154811061063857600080fd5b906000526020600020906002020160009150905080600001805461065b906115f2565b80601f0160208091040260200160405190810160405280929190818152602001828054610687906115f2565b80156106d45780601f106106a9576101008083540402835291602001916106d4565b820191906000526020600020905b8154815290600101906020018083116106b757829003601f168201915b5050505050908060010154905082565b606060007f72c3eec1760bf69946625c2d4fb8e44e2c806345041960b434674fb9ab3976cf61071281610a7f565b6001805490508410610759576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075090611574565b60405180910390fd5b6001848154811061076d5761076c611594565b5b90600052602060002090600202016000016001858154811061079257610791611594565b5b9060005260206000209060020201600101548180546107b0906115f2565b80601f01602080910402602001604051908101604052809291908181526020018280546107dc906115f2565b80156108295780601f106107fe57610100808354040283529160200191610829565b820191906000526020600020905b81548152906001019060200180831161080c57829003601f168201915b505050505091509250925050915091565b610842610bf3565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a690611750565b60405180910390fd5b6108b98282610bfb565b5050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756108e781610a7f565b6001604051806040016040528084815260200160008152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001908161093d9190611907565b506020820151816001015550507ff29562dad1599aea0ebb142466120aab326d5efa8f839df82a9c064bf78e89388260405161097991906119d9565b60405180910390a15050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b60026020528060005260406000206000915054906101000a900460ff1681565b7f72c3eec1760bf69946625c2d4fb8e44e2c806345041960b434674fb9ab3976cf81565b610a67826105b0565b610a7081610a7f565b610a7a8383610bfb565b505050565b610a9081610a8b610bf3565b610cdc565b50565b60008183610aa19190611a2a565b905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610b1d82826109a9565b610bef57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610b94610bf3565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b610c0582826109a9565b15610cd857600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610c7d610bf3565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b610ce682826109a9565b610d5d57610cf381610d61565b610d018360001c6020610d8e565b604051602001610d12929190611b32565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5491906119d9565b60405180910390fd5b5050565b6060610d878273ffffffffffffffffffffffffffffffffffffffff16601460ff16610d8e565b9050919050565b606060006002836002610da19190611b6c565b610dab9190611a2a565b67ffffffffffffffff811115610dc457610dc361131b565b5b6040519080825280601f01601f191660200182016040528015610df65781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610e2e57610e2d611594565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610e9257610e91611594565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610ed29190611b6c565b610edc9190611a2a565b90505b6001811115610f7c577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610f1e57610f1d611594565b5b1a60f81b828281518110610f3557610f34611594565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610f7590611bae565b9050610edf565b5060008414610fc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb790611c23565b60405180910390fd5b8091505092915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610ff181610fde565b8114610ffc57600080fd5b50565b60008135905061100e81610fe8565b92915050565b60006020828403121561102a57611029610fd4565b5b600061103884828501610fff565b91505092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61107681611041565b811461108157600080fd5b50565b6000813590506110938161106d565b92915050565b6000602082840312156110af576110ae610fd4565b5b60006110bd84828501611084565b91505092915050565b60008115159050919050565b6110db816110c6565b82525050565b60006020820190506110f660008301846110d2565b92915050565b6000819050919050565b61110f816110fc565b811461111a57600080fd5b50565b60008135905061112c81611106565b92915050565b60006020828403121561114857611147610fd4565b5b60006111568482850161111d565b91505092915050565b611168816110fc565b82525050565b6000602082019050611183600083018461115f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111b482611189565b9050919050565b6111c4816111a9565b81146111cf57600080fd5b50565b6000813590506111e1816111bb565b92915050565b600080604083850312156111fe576111fd610fd4565b5b600061120c8582860161111d565b925050602061121d858286016111d2565b9150509250929050565b61123081610fde565b82525050565b600060208201905061124b6000830184611227565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561128b578082015181840152602081019050611270565b60008484015250505050565b6000601f19601f8301169050919050565b60006112b382611251565b6112bd818561125c565b93506112cd81856020860161126d565b6112d681611297565b840191505092915050565b600060408201905081810360008301526112fb81856112a8565b905061130a6020830184611227565b9392505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61135382611297565b810181811067ffffffffffffffff821117156113725761137161131b565b5b80604052505050565b6000611385610fca565b9050611391828261134a565b919050565b600067ffffffffffffffff8211156113b1576113b061131b565b5b6113ba82611297565b9050602081019050919050565b82818337600083830152505050565b60006113e96113e484611396565b61137b565b90508281526020810184848401111561140557611404611316565b5b6114108482856113c7565b509392505050565b600082601f83011261142d5761142c611311565b5b813561143d8482602086016113d6565b91505092915050565b60006020828403121561145c5761145b610fd4565b5b600082013567ffffffffffffffff81111561147a57611479610fd9565b5b61148684828501611418565b91505092915050565b6000602082840312156114a5576114a4610fd4565b5b60006114b3848285016111d2565b91505092915050565b7f596f75206861766520616c726561647920766f74656400000000000000000000600082015250565b60006114f260168361125c565b91506114fd826114bc565b602082019050919050565b60006020820190508181036000830152611521816114e5565b9050919050565b7f496e76616c69642063616e64696461746520696e646578000000000000000000600082015250565b600061155e60178361125c565b915061156982611528565b602082019050919050565b6000602082019050818103600083015261158d81611551565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061160a57607f821691505b60208210810361161d5761161c6115c3565b5b50919050565b60008190508160005260206000209050919050565b60008154611645816115f2565b61164f818661125c565b9450600182166000811461166a5760018114611680576116b3565b60ff1983168652811515602002860193506116b3565b61168985611623565b60005b838110156116ab5781548189015260018201915060208101905061168c565b808801955050505b50505092915050565b600060208201905081810360008301526116d68184611638565b905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b600061173a602f8361125c565b9150611745826116de565b604082019050919050565b600060208201905081810360008301526117698161172d565b9050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026117bd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611780565b6117c78683611780565b95508019841693508086168417925050509392505050565b6000819050919050565b60006118046117ff6117fa84610fde565b6117df565b610fde565b9050919050565b6000819050919050565b61181e836117e9565b61183261182a8261180b565b84845461178d565b825550505050565b600090565b61184761183a565b611852818484611815565b505050565b5b818110156118765761186b60008261183f565b600181019050611858565b5050565b601f8211156118bb5761188c81611623565b61189584611770565b810160208510156118a4578190505b6118b86118b085611770565b830182611857565b50505b505050565b600082821c905092915050565b60006118de600019846008026118c0565b1980831691505092915050565b60006118f783836118cd565b9150826002028217905092915050565b61191082611251565b67ffffffffffffffff8111156119295761192861131b565b5b61193382546115f2565b61193e82828561187a565b600060209050601f831160018114611971576000841561195f578287015190505b61196985826118eb565b8655506119d1565b601f19841661197f86611623565b60005b828110156119a757848901518255600182019150602085019450602081019050611982565b868310156119c457848901516119c0601f8916826118cd565b8355505b6001600288020188555050505b505050505050565b600060208201905081810360008301526119f381846112a8565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a3582610fde565b9150611a4083610fde565b9250828201905080821115611a5857611a576119fb565b5b92915050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000611a9f601783611a5e565b9150611aaa82611a69565b601782019050919050565b6000611ac082611251565b611aca8185611a5e565b9350611ada81856020860161126d565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000611b1c601183611a5e565b9150611b2782611ae6565b601182019050919050565b6000611b3d82611a92565b9150611b498285611ab5565b9150611b5482611b0f565b9150611b608284611ab5565b91508190509392505050565b6000611b7782610fde565b9150611b8283610fde565b9250828202611b9081610fde565b91508282048414831517611ba757611ba66119fb565b5b5092915050565b6000611bb982610fde565b915060008203611bcc57611bcb6119fb565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611c0d60208361125c565b9150611c1882611bd7565b602082019050919050565b60006020820190508181036000830152611c3c81611c00565b905091905056fea2646970667358221220aacb21764d7cce333ba348fd1afb33ea1afb9042e14c85591b97d36ed9c9624064736f6c63430008120033"
const app = express();
const web3 = new Web3(Web3.givenProvider || "http://127.0.0.1:7545")
//const async accounts = await web3.eth.getAccounts();
// Deploy the contract and get the deployed address
let accounts1,accounts2;
web3.eth.getAccounts()
  .then((results) => {
    console.log("***web3.eth.getAccounts()***:");
    console.log(results[0]);
    accounts1 = results[0];
    accounts2 = results[1]
    // Perform further operations with the accounts

    // Access the accounts array within the scope
  })
  .catch((error) => {
    console.error(error);
    // Handle the error
  })
  .finally(() => {
    
  });
app.get('/previousdetails/:contractaddress', async (req,res) => {
    try{
      const { contractaddress } = req.params;
      const { address, address1 } = req.query;
      const VotingSystemContract = new web3.eth.Contract(contractABI,contractaddress);
      const candidateCount = await VotingSystemContract.methods.getCandidateCount().call({ from: address1});
      const candidates = [];
      for (let i = 0; i < candidateCount; i++) {
        const candidate = await VotingSystemContract.methods.getCandidate(i).call({ from: address});
        candidates.push({
          id: i,
          name: candidate[0],
          voteCount: candidate[1]
        });
      }
      console.log("Fetched Candidate")
      res.status(201).json(candidates)
    } catch (error) {
      console.error(error);
      res.status(500).json({ error: 'Failed to fetch candidates' });
    }
  });
  app.post('/stop', (req, res) => {
    console.log('Stopping the server...');
      server.close(() => {
      console.log('Server stopped');
      process.exit(0); // Optional: Terminate the Node.js process
    });
    res.sendStatus(200);
  });
  
//let test = web3.utils.toChecksumAddress(deployedAddress)
// Set the deployed address in the contract instance
//VotingSystemContract.options.address = test;

const server = app.listen(3003, () => {
    console.log('Server started on port 3003');
  });